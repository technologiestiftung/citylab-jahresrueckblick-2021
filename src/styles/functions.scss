$rem-to-px-conversion: false !default;
$rem-to-px-base: 16px !default;

// converts pixel values to rem and provides a px fallback on a stylesheet base
//
// the sass variable $rem-to-px-conversion defaults to false.
// for older browsers you can override this in a separate stylesheet and
// all values will outputted as is without a conversion.
//
// the conversion base for px to rem conversions can be configuried
// via $rem-to-px-base and defaults to 16px (as in most browsers)
//
// based on work by David Walsh: http://davidwalsh.name/rem-px-browser-function-sass
//
// @param  {String} $values One or more px values
// @return {String} values in rem or px, depending on the configuration
//
// @example
// margin: remify(32px 0 24px 0)
// returns: margin: 2rem 0 1.5rem 0
// and for IE: margin: 32px 0 24px 0

@function remify($values) {
  // sanity-checks
  @if not global-variable-exists(rem-to-px-conversion) {
    @error "Please provide variable named $rem-to-px-conversion";
  }

  @if not global-variable-exists(rem-to-px-base) {
    @error "Please provide variable named $rem-to-px-base";
  }

  $list: ();

  // there can be CSS attributes with more than one value
  @each $value in $values {
    @if $value == "auto" {
      $list: append($list, $value);
    } @else {
      $unit: unit($value);

      @if $rem-to-px-conversion {
        @if $unit == "rem" {
          $list: append($list, $value / 1rem * $rem-to-px-base);
        } @else {
          $list: append($list, $value);
        }
      } @else if $unit == "rem" or $unit == "" {
        $list: append($list, $value);
      } @else if $unit == unit($rem-to-px-base) {
        $list: append($list, $value / $rem-to-px-base + 0rem);
      } @else if $unit == "em" {
        $list: append($list, $value / 1em + 0rem);
      } @else {
        @warn "There is currently no unit conversion for #{$unit}";
      }
    }
  }

  // do not return single value list - e.g. this makes math operations simpler
  @if length($list) == 1 {
    @return nth($list, 1);
  }

  @return $list;
}
